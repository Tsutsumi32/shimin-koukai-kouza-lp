@use '../functions/strip-unit' as *;
@use '../functions/to-per' as *;

////////////////////////////////////////////////////////////////////////////////
///
///  layout
///
////////////////////////////////////////////////////////////////////////////////

/////////////////////////////////////////
//  デザインサイズ
/////////////////////////////////////////
$design_size_sp: 375;
$design_size_pc: 1440;

/////////////////////////////////////////
//  スクロールバー幅バッファ
/////////////////////////////////////////
$width_scrollbar: 20px;

/////////////////////////////////////////
//  pc時の左右余白最低値
/////////////////////////////////////////
$padding_container_pc: 2rem;

/////////////////////////////////////////
//  デザインのコンテナ
/////////////////////////////////////////
// SPデザインのコンテナサイズ
$design_container_sp: 334;

// PCデザインのコンテナサイズ
// ( => PC時に確保したいコンテナ幅->リキッドとレスポンシブの境界)
$design_container_pc: 1131;

/////////////////////////////////////////
//  PC時に最低限確保する幅
//  (確保したいコンテナ幅 + 確保したい左右余白 + スクロールバーバッファ)
/////////////////////////////////////////
$minWidth_container_pc: calc(
  $design_container_pc + (strip-unit($padding_container_pc) * 10 * 2) + strip-unit($width_scrollbar)
);

/////////////////////////////////////////
//  コーディングのコンテナ
/////////////////////////////////////////
// SPコンテナサイズ(%で可変し続ける)
$width_container_sp: to-per($design_container_sp, $design_size_sp);

// PCコンテナサイズ(rem指定 可変 -> 固定 -> 可変)
// レスポンシブレイアウト間(PC最小幅～リキッドになる間)はコンテナ幅を固定値設定 -> 左右の余白が大きくなる動き
$width_container_pc: calc($design_container_pc / 10 * 1rem);

/////////////////////////////////////////
//  ブレイクポイント
/////////////////////////////////////////
/// ※レイアウト変更はSP/TAB/PC想定
// SP/TAB
$break_tab: 560;
// TAB/TABL
$break_tabL: 768;
// TAB/PC
$break_pc: 960;
// $design_container_pcを確保できる画面幅 これ以下リキッド これ以上レスポンシブ
$break_pcL: $minWidth_container_pc + 50;
// PCレイアウト リキッドに変換ポイント
$break_pcLL: 1920;

/////////////////////////////////////////
//  リキッド基準値
/////////////////////////////////////////
//SP
$liquid_point_sp: $design_size_sp;
//TAB
$liquid_point_tab: $design_size_sp * 1.8;
//TABL
$liquid_point_tabL: $design_size_sp * 2;
//pc～pcL
$liquid_point_pc: $break_pcL;
//pcLL～
$liquid_point_pcL: $break_pcLL;

////////////////////////////////////////////////////////////////////////////////
///
///  color
///
////////////////////////////////////////////////////////////////////////////////
//各種色
$color_black: #000;
$color_white: #fff;
$color_dark: #000;
$color_theme: #164097;
$color_theme_light: #c3e2f3;
$color_theme_light2: #b0e0f7;
$color_theme_light3: #e6f2f8;
$color_theme_light4: #82cef2;
$color_gray: #e7ebf4;
$color_accent: #c42e29;

////////////////////////////////////////////////////////////////////////////////
///
///  font
///
////////////////////////////////////////////////////////////////////////////////
$font-f_noto: 'Noto Sans', sans-serif;

////////////////////////////////////////////////////////////////////////////////
///
///  image
///
////////////////////////////////////////////////////////////////////////////////
//画像ファイルパス
$image_path_origin: '../images/_origin/';
$image_path_webp: '../images/webp/';
$image_path_avif: '../images/avif/';
$image_path_half: '../images/half/';

////////////////////////////////////////////////////////////////////////////////
///
///  header height
///
////////////////////////////////////////////////////////////////////////////////


////////////////////////////////////////////////////////////////////////////////
///
///  border style
///
////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////
///
///  others
///
////////////////////////////////////////////////////////////////////////////////
